---
title: "Introducing Leaflet"
subtitle: "Team Analytics and Beyond"
format: 
  revealjs:
    slide-number: c/t   
    logo: "https://upload.wikimedia.org/wikipedia/commons/e/e8/Marquette_Golden_Eagles_logo.svg"
date: "`r Sys.Date()`"
author: "**Andrew Hiller, Annie Gibbons, Caroline Kwak, Noah Kaye**"
number-sections: true
from: markdown+emoji
editor: 
  source
---

```{r}
#| label: setup
#| include: false

####################################################
## !!!DO NOT MAKE ANY CHANGE OF THIS CODE CHUNK!!!##
####################################################

# Package names
packages <- c("knitr", "ggplot2", "ggrepel", 
              "tidyverse", "formatR", "dslabs", "janitor", 
              "ggthemes", "plotly", "tidymodels", "kknn")

# Install packages not yet installed
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
    install.packages(packages[!installed_packages])
}

# Packages loading
invisible(lapply(packages, library, character.only = TRUE))
```

## First Slide
```{r}

library(leaflet)

xl_file <- readxl::read_excel("./data/MU Location Coordinates.xlsx")
xl_file


```

## Second Slide
```{r}

m <- leaflet(data = xl_file) %>%
  addTiles() %>%
  addMarkers(lat = ~Latitude , lng = ~Longitude , popup = ~Location, label = ~as.character(Type))

m

getcolor <- function(xl_file){
  sapply(xl_file$Type, function(Type) {
    if(Type == "Residence Hall") {
      "purple"
    }else if(Type == "University Apartment"){
      "orange"
    }else if(Type == "Administrative") {
      "green"
    }else if(Type == "Academic") {
      "blue"
    }else if(Type == "Recreation") {
      "red"
    }else if(Type == "Religious Institution"){
      "yellow"
    }else if(Type == "Parking") {
      "black"
    }else{
      "white"
    }
  })
}

icons <- awesomeIcons(
  icon = 'ios-close',
  iconColor = 'black',
  library = 'ion',
  markerColor = getcolor(xl_file)
)


#leaflet(xl_file) |>
#  addTiles() |>
#  addAwesomeMarkers(~lng, ~lat, icon=icons, label=~as.character(Type))

```